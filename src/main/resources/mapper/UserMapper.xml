<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.nybproject.meet.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.example.nybproject.meet.pojo.User">
        <result property="id" column="id"/>
        <result property="kind" column="kind"/>
        <result property="meetAddr" column="meet_addr"/>
        <result property="name" column="name"/>
        <result property="isFreeze" column="is_freeze"/>
        <result property="password" column="password"/>
        <result property="delete" column="delete"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="Base_Column_List">
        id ,kind ,meet_addr ,`name` ,password ,`delete` ,is_freeze ,create_time ,update_time
    </sql>

    <insert id="saveSelective"  useGeneratedKeys="true" keyProperty="id"  parameterType="com.example.nybproject.meet.pojo.User">
        INSERT INTO user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="null!=id">
                id  ,
            </if>
            <if test="null!=kind">
                kind  ,
            </if>
            <if test="null!=meetAddr">
                meet_addr  ,
            </if>
            <if test="null!=name">
                `name`  ,
            </if>
            <if test="null!=password">
                password  ,
            </if>
            <if test="null!=delete">
                `delete`  ,
            </if>
            <if test="null!=isFreeze">
                is_freeze  ,
            </if>
            <if test="null!=createTime">
                create_time  ,
            </if>
            <if test="null!=updateTime">
                update_time
            </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="null!=id">
                #{id, jdbcType=INTEGER} ,
            </if>
            <if test="null!=kind">
                #{kind, jdbcType=INTEGER} ,
            </if>
            <if test="null!=meetAddr">
                #{meetAddr, jdbcType=VARCHAR} ,
            </if>
            <if test="null!=name">
                #{name, jdbcType=VARCHAR} ,
            </if>
            <if test="null!=password">
                #{password, jdbcType=VARCHAR} ,
            </if>
            <if test="null!=delete">
                #{delete, jdbcType=TINYINT} ,
            </if>
            <if test="null!=isFreeze">
                #{isFreeze, jdbcType=TINYINT} ,
            </if>
            <if test="null!=createTime">
                #{createTime, jdbcType=TIMESTAMP} ,
            </if>
            <if test="null!=updateTime">
                #{updateTime, jdbcType=TIMESTAMP}
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.example.nybproject.meet.pojo.User">
        UPDATE user
        <set>
            <if test="null!=kind">
                kind = #{kind, jdbcType=INTEGER} ,
            </if>
            <if test="null!=meetAddr and ''!=meetAddr ">
                meet_addr = #{meetAddr, jdbcType=VARCHAR} ,
            </if>
            <if test="null!=name and ''!=name ">
                `name` = #{name, jdbcType=VARCHAR} ,
            </if>
            <if test="null!=password and ''!=password ">
                password = #{password, jdbcType=VARCHAR} ,
            </if>
            <if test="null!=delete">
                `delete` = #{delete, jdbcType=TINYINT} ,
            </if>
            <if test="null!=isFreeze">
                is_freeze = #{isFreeze, jdbcType=TINYINT} ,
            </if>
            <if test="null!=createTime">
                create_time = #{createTime, jdbcType=TIMESTAMP} ,
            </if>
            <if test="null!=updateTime">
                update_time = #{updateTime, jdbcType=TIMESTAMP}
            </if>
        </set>
        WHERE
        id = #{id}
    </update>

    <select id="getByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE
        id = #{id}
    </select>

    <select id="getByMeetAddr" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM user
        WHERE
        meet_addr = #{meetAddr}
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        select * from user
    </select>

    <select id="findsByIdentityCard" resultType="java.lang.Integer">
        select id from user where identity_card = #{identityCard}
    </select>

    <select id="findsByTeleNum" resultType="java.lang.Integer">
        select id from user where tele_num = #{teleNum}
    </select>

</mapper>
